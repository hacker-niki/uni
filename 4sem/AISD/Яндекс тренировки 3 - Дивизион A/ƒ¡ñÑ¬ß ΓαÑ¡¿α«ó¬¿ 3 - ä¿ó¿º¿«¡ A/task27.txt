#include <iostream>
#include <cmath>

int main()
{
    std::string s1, s2;
    std::cin >> s1 >> s2;

    int N = s1.size() + 1;
    int M = s2.size() + 1;

    long long** D = new long long* [N];
    for (int i = 0; i < N; i++)
    {
        D[i] = new long long[M];
    }

    D[0][0] = 0;
    for (int j = 1; j < M; j++)
    {
        D[0][j] = D[0][j - 1] + 1;
    }
    for (int i = 1; i < N; i++)
    {
        D[i][0] = D[i - 1][0] + 1;
        for (int j = 1; j < M; j++)
        {
            if (s1[i - 1] != s2[j - 1])
            {
                D[i][j] = std::min(D[i - 1][j] + 1, std::min(D[i][j - 1] + 1, D[i - 1][j - 1] + 1));
            }
            else
            {
                D[i][j] = D[i - 1][j - 1];

            }
        }
    }

    /*for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < M; j++)
        {
            std::cout << D[i][j] << ' ';
        }
        std::cout << '\n';
    }*/

    std::cout << D[N - 1][M - 1];

    return 0;
}