#include <iostream>
#include <vector>
#include <set>

std::vector<std::vector<int>> g;
int n;

std::set<int> versh;

std::vector<char> used;

void dfs(int v)
{
    used[v] = true;
    for (std::vector<int>::iterator i = g[v].begin(); i != g[v].end(); ++i)
    {
        //std::cout << *i << ' ';
        versh.insert(*i);
        if (!used[*i])
        {
            dfs(*i);
        }
    }
    //std::cout << '\n';
}

int main()
{
    int m;
    std::cin >> n >> m;
    used.resize(n + 1);
    versh.insert(1);
    for (int i = 0; i < n + 1; i++)
    {
        std::vector<int> v;
        g.push_back(v);
    }

    for (int i = 0; i < m; i++)
    {
        int a, b;
        std::cin >> a >> b;
        g[b].push_back(a);
    }

    dfs(1);
    /*dfs(2);
    dfs(3);
    dfs(4);*/
    //std::cout << 1 << ' ';
    for (auto elem : versh)
    {
        std::cout << elem << ' ';
    }
    
    /*for (int i = 0; i < m; i++)
    {
        for (auto elem : g[i])
        {
            std::cout << elem << ' ';
        }
        std::cout << '\n';
    }*/

    return 0;
}

/*7 6
1 2
2 1
2 3
4 5
6 5
5 6*/