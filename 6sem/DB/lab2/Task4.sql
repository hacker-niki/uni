DROP TABLE STUDENTS_LOG;
DROP SEQUENCE STUDENTS_LOG_SEQ;

CREATE TABLE STUDENTS_LOG (
    LOG_ID NUMBER PRIMARY KEY,
    ACTION VARCHAR2(10),
    STUDENT_ID NUMBER,
    STUDENT_NAME VARCHAR2(100),
    GROUP_ID NUMBER,
    ACTION_DATE TIMESTAMP
);

CREATE SEQUENCE STUDENTS_LOG_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER STUDENTS_AUDIT
AFTER INSERT OR UPDATE OR DELETE ON STUDENTS
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO STUDENTS_LOG (LOG_ID, ACTION, STUDENT_ID, STUDENT_NAME, GROUP_ID, ACTION_DATE)
        VALUES (STUDENTS_LOG_SEQ.NEXTVAL, 'INSERT', :NEW.ID, :NEW.NAME, :NEW.GROUP_ID, SYSTIMESTAMP);
    ELSIF UPDATING THEN
        INSERT INTO STUDENTS_LOG (LOG_ID, ACTION, STUDENT_ID, STUDENT_NAME, GROUP_ID, ACTION_DATE)
        VALUES (STUDENTS_LOG_SEQ.NEXTVAL, 'UPDATE', :NEW.ID, :NEW.NAME, :NEW.GROUP_ID, SYSTIMESTAMP);
    ELSIF DELETING THEN
        INSERT INTO STUDENTS_LOG (LOG_ID, ACTION, STUDENT_ID, STUDENT_NAME, GROUP_ID, ACTION_DATE)
        VALUES (STUDENTS_LOG_SEQ.NEXTVAL, 'DELETE', :OLD.ID, :OLD.NAME, :OLD.GROUP_ID, SYSTIMESTAMP);
    END IF;
END;
/