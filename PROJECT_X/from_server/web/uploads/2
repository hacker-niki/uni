Команды передачи управления можно разделить на 4 группы: 

команды безусловного перехода (JMP, BRA, BRN, NOP)

команды работы с подпрограммами (JSR, BSR, RTS)

команды условного перехода (BEQ, BNE, BMI, BPL, BCS/BLO, BCC/BHS, BVS, BVC, ВGТ, BGE, BLT, BLE, BLS, BHI, BRSET, BRCLR)

команды работы с прерываниями (SWI, RTI)

Безусловные переходы позволяют программе продолжить исполнение с другой
точки в коде без проверки условий.

JMP (Jump) - Происходит переход к инструкции, хранящейся по эффективному
адресу. Эффективный адрес получается в соответствии с правилами для EXTended 
(расширенная) или INDexed (индексная) адресации.

BRA (Rel) (Branch Always) - выполняет безусловный переход на адрес, 
указанный в формуле. Относительное смещение (Rel) хранится как число 
со знаком (двухбайтовое дополнение) во втором байте машинного кода, 
соответствующего инструкции перехода.

Relative Addressing Mode (REL) - Режим относительной адресации.

Принципы работы:
В исходной программе адрес назначения для любой команды перехода указывается
абсолютным значением. Это может быть числовое значение, символ или выражение,
которое ассемблер может численно оценить.
Ассемблер вычисляет относительный адрес (Rel), используя абсолютный адрес и текущее
значение счетчика расположения.
Команда BRA используется для перехода на новый участок кода, игнорируя условия,
позволяя программе продолжить выполнение с другой точки.

BRN (Branch Never) - никогда не выполняет переход. 
По сути, это инструкция,эквивалентная двухбайтовой команде NOP (no operation),
выполнение которой занимает три цикла.

Принципы работы:
Команда включена в набор инструкций как дополнение к команде BRA. Полезна при
отладке программы, так как позволяет нейтрализовать эффект другой команды перехода,
не изменяя байт смещения.

Наличие такой команды также полезно при реализации компиляторов. Команда BRN может
использоваться для временной деактивации переходов, что особенно удобно в процессе
разработки и тестирования программ.

