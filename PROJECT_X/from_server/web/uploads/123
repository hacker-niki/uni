Цифровой компьютер – это машина, которая может решать задачи, выполняя
данные ей команды. Последовательность команд, описывающих решение
определенной задачи, называется программой. Электронные схемы каждого
компьютера могут распознавать и выполнять ограниченный набор простых
команд. Поэтому все программы перед выполнением должны быть
превращены в последовательность таких команд, которые обычно не сложнее
чем
• Сложить два числа;
• Проверить, не является ли число нулем;
• Скопировать кусок данных из одной части памяти в другую.
Это примитивные команды и являются тем языком, которым человек
общается с компьютером. Такой язык называется машинным. Обычно
разработчик старается сделать машинные команды как можно проще, что бы
избежать дополнительных сложностей при конструировании компьютера,
снизить затраты на электронику. Поэтому большинство машинных языков
очень примитивны и их использование трудно и утомительно.
Это привело к тому, что с течением времени появились ряд уровней
абстракций, каждая из которых настраивается над абстракцией более низкого
уровня. Такой поход называется многоуровневой компьютерной
организацией.
1.1 Многоуровневая компьютерная организация
Существует разница между тем, что удобно людям и тем, что удобно для
компьютера (или что удобно программисту и что удобно разработчику
электроники). В литературе это получило название семантического разрыва.
Семантический разрыв определяет различие принципов, лежащих в основе
языков программирования высокого уровня и тех принципов, которые
определяют архитектуру ЭВМ. В этом курсе мы рассмотрим, каким образом
можно решить эти проблемы.
1.1.1 Языки, уровни и виртуальные машины
Обозначим через Я1 – язык программирования, удобный для человека.
Машинные команды также образуют некоторый язык, понятныйкомпьютеру, который обозначим как Я0. Для того, чтобы перевести
программы с языка Я1 на понятный компьютеру язык Я0 можно
использовать следующие подходы.
Первый способ – замена каждой команды, написанной на языке Я1
эквивалентным набором команд, написанных на языке Я0. В этом случае
компьютер выполняет новую программу, написанную на языке Я0 вместо
старой, записанной на языке Я1. Такая технология называется трансляцией.
Второй способ – написание программы на языке Я0, которая берет команды,
написанные на языке Я1 в качестве исходных данных, рассматривает каждую
команду по очереди и сразу выполняет эквивалентный набор команд языка
Я0. Эта технология не требует составления новой программы на языке Я0,
Эта технология называется интерпретацией, а программа, осуществляющая
интерпретацию называется интерпретатором.
Различия между трансляцией и интерпретацией заключается в том, что при
трансляции все программа Я1 переделывается в программу Я0 и программа
Я1 может быть отброшена, а в память компьютера загружается программа
Я0. При интерпретации каждая команда перекодируется и тут же
выполняется.
На практике проще представить себе существование некоторого
гипотетического компьютера, или виртуальной машины, для которой
машинным языком является удобный для нас язык Я1, чем думать о
трансляции и интерпретации. Назовет такую машину М1, а машину,
понимающую язык Я0, машиной МО.
Чтобы трансляция и интерпретация были бы целесообразны, необходимо,
чтобы языки Я0 и Я1 не очень отличались друг от друга. Казалось бы, это
требование находится в некотором противоречии с целью создания языка Я1,
удобного для человека. Однако это противоречие разрешается следующим
очевидным образом.
Создается следующий набор команд Я2, который в большей степени
ориентирован на человека. Этому языку соответствует виртуальная машина
М2, соответствующие трансляторы или интерпретаторы Я2-Я1 и т.д.
Изобретение ряда языков, каждый из которых более удобен для человека,
чем предыдущий может продолжаться до тех пор, пока мы не дойдем до
подходящего. Каждый последующий язык рассматривает предыдущий как
основу и поэтому можно представить компьютер в виде уровней (см. рис.
В1).
Человеку, пишущему программы на языке Яn не обязательно знать об
интерпретаторах и трансляторах более низких уровней. Большинство
пользователей, использующих машину уровня n интересуются только этим
уровнем. Однако для изучения работы компьютера необходимо изучить все
уровни.
